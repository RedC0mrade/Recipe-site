#name: Foodgram workflow
#
#on:
#  push:
#    branches:
#      - '*'
#jobs:
#  tests:
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:13.10
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: db
#        ports:
#          - 5432:5432
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.9
#
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8==6.0.0 flake8-isort==6.0.0
#        pip install -r ./backend/requirements.txt
#    - name: Test with flake8 and django tests
#      env:
#        POSTGRES_USER: kittygram_user
#        POSTGRES_PASSWORD: kittygram_password
#        POSTGRES_DB: kittygram_db
#        DB_HOST: 127.0.0.1
#        DB_PORT: 5432
#      run: |
#        python -m flake8 backend/
#        cd backend/
#        python manage.py test
#  build_and_push_to_docker_hub:
#    name: Push Docker image to DockerHub
#    runs-on: ubuntu-latest
#    needs: tests
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login to Docker
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Push to DockerHub
#        uses: docker/build-push-action@v4
#        with:
#          context: ./backend/
#          push: true
#          tags: redc0mrade/kittygram_backend:latest
#  frontend_tests:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up nodeJS
#      uses: actions/setup-node@v3
#      with:
#        node-version: 18
#
#    - name: Install dependencies
#      run: |
#        cd frontend/
#        npm ci
#
#    - name: Test frontend
#      run: |
#        cd frontend/
#        npm run test
#  build_frontend_and_push_to_docker_hub:
#    name: Push frontend Docker image to DockerHub
#    runs-on: ubuntu-latest
#    needs: frontend_tests
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login to Docker
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Push to DockerHub
#        uses: docker/build-push-action@v4
#        with:
#          context: ./frontend/
#          push: true
#          tags: redc0mrade/kittygram_frontend:latest
#  build_gateway_and_push_to_docker_hub:
#    name: Push gateway Docker image to DockerHub
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login to Docker
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Push to DockerHub
#        uses: docker/build-push-action@v4
#        with:
#          context: ./gateway/
#          push: true
#          tags: redc0mrade/kittygram_gateway:latest
#  deploy:
#    runs-on: ubuntu-latest
#    needs:
#      - build_and_push_to_docker_hub
#      - build_frontend_and_push_to_docker_hub
#      - build_gateway_and_push_to_docker_hub
#    if: github.ref == 'refs/heads/main'
#    steps:
#    - name: Checkout repo
#      uses: actions/checkout@v3
#    - name: Copy docker-compose.yml via ssh
#      uses: appleboy/scp-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USER }}
#        key: ${{ secrets.SSH_KEY }}
#        passphrase: ${{ secrets.SSH_PASSPHRASE }}
#        source: "docker-compose.production.yml"
#        target: "kittygram"
#    - name: Executing remote ssh commands to deploy
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USER }}
#        key: ${{ secrets.SSH_KEY }}
#        passphrase: ${{ secrets.SSH_PASSPHRASE }}
#        script: |
#          cd kittygram
#          sudo docker compose -f docker-compose.production.yml pull
#          sudo docker compose -f docker-compose.production.yml down
#          sudo docker compose -f docker-compose.production.yml up -d
#          sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
#          sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
#          sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/
#  send_message:
#    runs-on: ubuntu-latest
#    needs: deploy
#    if: github.ref == 'refs/heads/main'
#    steps:
#    - name: Send message
#      uses: appleboy/telegram-action@master
#      with:
#        to: ${{ secrets.TELEGRAM_TO }}
#        token: ${{ secrets.TELEGRAM_TOKEN }}
#        message: Деплой успешно выполнен!


        # name: Foodgram workflow
        # on:
        #   push:
        #     branches:
        #       - master
        # jobs:
        #   tests:
        #     runs-on: ubuntu-latest
        #     steps:
        #     - name: Check out code
        #       uses: actions/checkout@v3
        #     - name: Set up Python
        #       uses: actions/setup-python@v4
        #       with:
        #         python-version: 3.9
        #     - name: Install dependencies
        #       run: |
        #         python -m pip install --upgrade pip
        #         pip install flake8==6.0.0 flake8-isort==6.0.0
        #     - name: Test with flake8
        #       run: python -m flake8 backend/
        #   build_and_push_to_docker_hub:
        #     name: Push Docker image to DockerHub
        #     runs-on: ubuntu-latest
        #     needs: tests
        #     steps:
        #       - name: Check out the repo
        #         uses: actions/checkout@v3
        #       - name: Set up Docker Buildx
        #         uses: docker/setup-buildx-action@v2
        #       - name: Login to Docker
        #         uses: docker/login-action@v2
        #         with:
        #           username: ${{ secrets.DOCKER_USERNAME }}
        #           password: ${{ secrets.DOCKER_PASSWORD }}
        #       - name: Push to DockerHub
        #         uses: docker/build-push-action@v4
        #         with:
        #           context: ./backend/
        #           push: true
        #           tags: alexk090591/foodgram_backend:latest
        #   build_frontend_and_push_to_docker_hub:
        #     name: Push frontend Docker image to DockerHub
        #     runs-on: ubuntu-latest

        #     steps:
        #       - name: Check out the repo
        #         uses: actions/checkout@v3
        #       - name: Set up Docker Buildx
        #         uses: docker/setup-buildx-action@v2
        #       - name: Login to Docker
        #         uses: docker/login-action@v2
        #         with:
        #           username: ${{ secrets.DOCKER_USERNAME }}
        #           password: ${{ secrets.DOCKER_PASSWORD }}
        #       - name: Push to DockerHub
        #         uses: docker/build-push-action@v4
        #         with:
        #           context: ./frontend/
        #           push: true
        #           tags: alexk090591/foodgram_frontend:latest
        #   deploy:
        #     runs-on: ubuntu-latest
        #     needs:
        #       - build_and_push_to_docker_hub
        #       - build_frontend_and_push_to_docker_hub
        #     steps:
        #       - name: executing remote ssh commands to deploy
        #         uses: appleboy/ssh-action@master
        #         with:
        #           host: ${{ secrets.HOST }}
        #           username: ${{ secrets.USER }}
        #           key: ${{ secrets.SSH_KEY }}
        #           passphrase: ${{ secrets.PASSPHRASE }}
        #           script: |
        #             cd infra
        #             sudo docker-compose down
        #             sudo docker pull alexk090591/foodgram_frontend:latest
        #             sudo docker pull alexk090591/foodgram_backend:latest
        #             touch .env
        #             echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
        #             echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        #             echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
        #             echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        #             echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        #             echo DB_PORT=${{ secrets.DB_PORT }} >> .env
        #             sudo docker-compose up -d

        #   send_message:
        #     runs-on: ubuntu-latest
        #     needs: deploy
        #     steps:
        #     - name: send message
        #       uses: appleboy/telegram-action@master
        #       with:
        #         to: ${{ secrets.TELEGRAM_TO }}
        #         token: ${{ secrets.TELEGRAM_TOKEN }}
        #         message: ${{ github.workflow }} успешно выполнен!